@using AssetManagement.Client.Client;
@using AssetManagement.Client.Pages.AppPages.Company;
@using AssetManagement.Client.Shared.Popup
@using AssetManagement.Dto.Models;
@using GridShared
@using GridShared.Columns
@using GridShared.Utility
@using Microsoft.Extensions.Primitives
@inject AppClient client
@implements ICustomGridComponent<EmployeeOnboardingDto>
@inject NavigationManager NavigationManager

<button class='btn btn-sm btn-success' style="border-radius:15px" @onclick="MyClickHandler" title="Share"><i class="fa fa-paper-plane" aria-hidden="true"></i></button>
<Dailog Title="@Title" Show="@show" OnCloseDialog="ResetForm">
    @if (show)
    {
        @if (TaskCompleted)
        {
            <div style="text-align:center;">
                @MessageBody
            </div>
        }
        else
        {
            <div style="text-align:center">
                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
            </div>
        }
    }
</Dailog>
@code {
    [Parameter]
    public EmployeeOnboardingDto Item { get; set; }

    [Parameter]
    public CGrid<EmployeeOnboardingDto> Grid { get; set; }

    bool show = false;
    bool TaskCompleted = false;
    string MessageBody = string.Empty;
    string Title = "Share form with Candidate";
    private async void MyClickHandler(MouseEventArgs e)
    {
        show = true;
        MessageBody = string.Empty;
        TaskCompleted = false;
        var responce = await client.ShareFormWithOnboardeeViaEmail(Item.Id);
        if (responce.IsSuccess)
        {
            MessageBody = responce.Message;
        }
        else
        {
            MessageBody = responce.Message;
        }
        TaskCompleted = true;
        StateHasChanged();
    }
    public void ResetForm()
    {
        show = false;
        TaskCompleted = false;
        MessageBody = string.Empty;
    }
}