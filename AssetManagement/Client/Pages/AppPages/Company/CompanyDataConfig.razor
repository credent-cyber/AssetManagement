@page "/company-config"
@page "/company-config/{Id:int}"
@using AssetManagement.Client.Client;
@using AssetManagement.Client.Pages.AppPages.Company.Component
@using AssetManagement.Client.Shared.Popup
@using AssetManagement.Dto.Models
@inject AppClient client
@inject ILogger<CompanyDataConfig> logger
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager
@attribute [Authorize]

<div>
    <div class="card">
        <div class="card-header bg-secondary text-center">
            @Title
        </div>
        <div class="card-body">
            @if (model == null && !TaskCompleted)
            {
                <div class="col-sm-12" style="margin-top:45vh; background-color: transparent;">
                    <div class="card-header">
                        <div class="loading-bar"></div>
                    </div>
                </div>
            }
            else
            {
                <EditForm Model="@model" OnValidSubmit="@OnValidSubmit">
                    <DataAnnotationsValidator />
                    @*<ValidationSummary />*@
                    <div class="form-group row mb-2">
                        <label class="col-form-label col-md-2 bold-font required-field">Company Code</label>
                        <div class="col-md-2">
                            <InputText id="Name" @bind-Value="model.CompanyCode" class="form-control" />
                            <ValidationMessage For="() => model.CompanyCode" />
                        </div>

                        <label class="col-form-label col-md-2 bold-font required-field">Company Name</label>
                        <div class="col-md-2">
                            <InputText id="Name" @bind-Value="model.Name" class="form-control" />
                            <ValidationMessage For="() => model.Name" />
                        </div>

                        <label class="col-form-label col-md-1 bold-font required-field">Gst</label>
                        <div class="col-md-3">
                            <InputText id="GSTNNumber" @bind-Value="model.GSTNNumber" class="form-control" />
                            <ValidationMessage For="() => model.GSTNNumber" />
                        </div>
                    </div>

                    <div class="form-group row mb-4">
                        <label class="col-form-label col-md-2 bold-font required-field">Registration</label>
                        <div class="col-md-2">
                            <InputSelect @bind-Value="model.RegistrationWith" class="form-control" id="RegistrationWith">
                                @foreach (var val in Enum.GetValues(typeof(RegistrationWith)))
                                {
                                    <option value="@val">@val</option>
                                }
                            </InputSelect>
                        </div>

                        @if (model.RegistrationWith == RegistrationWith.StartUp)
                        {
                            <label class="col-form-label col-md-2 bold-font required-field">Startup No.</label>
                            <div class="col-md-6">
                                <InputText id="StartupNo" @bind-Value="model.StartupNumber" class="form-control" />
                                <ValidationMessage For="() => model.StartupNumber" />
                            </div>
                        }
                        @if (model.RegistrationWith == RegistrationWith.MSME)
                        {
                            <label class="col-form-label col-md-2 bold-font required-field">UAM No.</label>
                            <div class="col-md-6">
                                <InputText id="UAMNo" @bind-Value="model.UAMNumber" class="form-control" />
                                <ValidationMessage For="() => model.UAMNumber" />
                            </div>
                        }
                    </div>

                    <div class="form-group row mb-2">
                        <label class="col-form-label col-md-2 bold-font required-field">Incorporation No</label>
                        <div class="col-md-4">
                            <InputText id="IncorporationNo" @bind-Value="model.IncorporationNumber" class="form-control" />
                            <ValidationMessage For="() => model.IncorporationNumber" />
                        </div>

                        <label class="col-form-label col-md-2 bold-font required-field">Incorporation Date</label>
                        <div class="col-md-4">
                            <InputDate id="IncorporationDate" @bind-Value="model.IncorporationDate" class="form-control" />
                            <ValidationMessage For="() => model.IncorporationDate" />
                        </div>
                    </div>

                    <div class="form-group row mb-2">
                        <label class="col-form-label col-md-2 bold-font required-field">Pan Number</label>
                        <div class="col-md-4">
                            <InputText id="PanNo" @bind-Value="model.PanNumber" class="form-control" />
                            <ValidationMessage For="() => model.PanNumber" />
                        </div>

                        <label class="col-form-label col-md-2 bold-font">ESI Number</label>
                        <div class="col-md-4">
                            <InputText id="ESINO" @bind-Value="model.ESINumber" class="form-control" />
                            <ValidationMessage For="() => model.ESINumber" />
                        </div>
                    </div>

                    <div class="form-group row mb-4">
                        <label class="col-form-label col-md-2 bold-font">PF Number</label>
                        <div class="col-md-4">
                            <InputText id="PFNo" @bind-Value="model.PFNumber" class="form-control" />
                            <ValidationMessage For="() => model.PFNumber" />
                        </div>

                        <label class="col-form-label col-md-2 bold-font required-field">TAN Number</label>
                        <div class="col-md-4">
                            <InputText id="TANNo" @bind-Value="model.TANNumber" class="form-control" />
                            <ValidationMessage For="() => model.TANNumber" />
                        </div>
                    </div>

                    <div class="form-group row mt-4 mb-4">
                        <label class="col-form-label col-md-2 bold-font required-field">Contact Person</label>
                        <div class="col-md-2">
                            <InputText id="ContactPerson" @bind-Value="model.ContactPerson" class="form-control" />
                            <ValidationMessage For="() => model.ContactPerson" />
                        </div>

                        <label class="col-form-label col-md-2 bold-font required-field">Contact Number</label>
                        <div class="col-md-2">
                            <InputText id="ContactNumber" @bind-Value="model.ContactNumber" class="form-control" />
                            <ValidationMessage For="() => model.ContactNumber" />
                        </div>
                        <label class="col-form-label col-md-1 bold-font required-field">Email</label>
                        <div class="col-md-3">
                            <InputText id="EmailId" @bind-Value="model.EmailId" class="form-control" />
                            <ValidationMessage For="() => model.EmailId" />
                        </div>
                    </div>

                    <MudExpansionPanels MultiExpansion="true">
                        <MudExpansionPanel Text="Address Details" MaxHeight="500">
                            <div class="form-group row">
                                <label class="col-form-label col-md-2 bold-font required-field">Address</label>
                                <div class="col-md-10 mb-2">
                                    <InputText id="Address" @bind-Value="model.Address" class="form-control" />
                                    <ValidationMessage For="() => model.Address" />
                                </div>

                                <label class="col-form-label col-md-2 bold-font required-field">State</label>
                                <div class="col-md-2">
                                    <InputText id="State" @bind-Value="model.State" class="form-control" />
                                    <ValidationMessage For="() => model.State" />
                                </div>

                                <label class="col-form-label col-md-2 bold-font required-field">Country</label>
                                <div class="col-md-2">
                                    <InputText id="Country" @bind-Value="model.Country" class="form-control" />
                                    <ValidationMessage For="() => model.Country" />
                                </div>

                                <label class="col-form-label col-md-2 bold-font required-field">PIN Code</label>
                                <div class="col-md-2">
                                    <InputText id="PIN" @bind-Value="model.PIN" class="form-control" />
                                    <ValidationMessage For="() => model.PIN" />
                                </div>
                            </div>
                        </MudExpansionPanel>
                        <MudExpansionPanel Text="Bank Details" MaxHeight="500">
                            <div class="form-group row mb-2">
                                <label class="col-form-label col-md-2 bold-font required-field">Bank Name</label>
                                <div class="col-md-4">
                                    <InputText id="BankName" @bind-Value="model.BankName" class="form-control" />
                                    <ValidationMessage For="() => model.BankName" />
                                </div>

                                <label class="col-form-label col-md-2 bold-font required-field">Account Number</label>
                                <div class="col-md-4">
                                    <InputText id="AccNumber" @bind-Value="model.AccNumber" class="form-control" />
                                    <ValidationMessage For="() => model.AccNumber" />
                                </div>

                            </div>
                            <div class="form-group row mb-2">
                                <label class="col-form-label col-md-2 bold-font required-field">IFSC Code</label>
                                <div class="col-md-4">
                                    <InputText id="IFSC" @bind-Value="model.IFSC" class="form-control" />
                                    <ValidationMessage For="() => model.IFSC" />
                                </div>

                                <label class="col-form-label col-md-2 bold-font required-field">Swift Code</label>
                                <div class="col-md-4">
                                    <InputText id="SwiftCOde" @bind-Value="model.SwiftCode" class="form-control" />
                                    <ValidationMessage For="() => model.SwiftCode" />
                                </div>
                            </div>
                        </MudExpansionPanel>
                        <MudExpansionPanel Text="Zonal Office" Style="padding:0">
                            <a class="btn btn-dark" @onclick="@(() => AddZone = true)"><i class="fa fa-thumb-tack" aria-hidden="true"></i> Add Zone</a>
                            <div class="table-responsive mt-3">
                                <table class="table table-striped table-bordered nowrap">
                                    <tbody>
                                        @foreach (var SubOffice in subOfficeAddress)
                                        {
                                            <tr>
                                                <td style="width: 2%">
                                                    <div class="d-md-flex align-items-center">
                                                        <label for="number" class="bold-font mb-0">@SubOffice.Number </label>
                                                    </div>
                                                </td>
                                                <td style="width: 20%">
                                                    <div class="d-md-flex align-items-center">
                                                        @*<i class="fa fa-building-o fa-2x mr-1" aria-hidden="true"></i>*@
                                                        <input type="text" class="form-control" @bind="@SubOffice.subName" placeholder="Office Address" />
                                                    </div>
                                                </td>
                                                <td style="width: 20%">
                                                    <div class="d-md-flex align-items-center">
                                                        @*<i class="fa fa-user fa-2x mr-1" aria-hidden="true"></i>*@
                                                        <input type="text" class="form-control" @bind="@SubOffice.subContPerson" placeholder="Contact Person" />
                                                    </div>
                                                </td>
                                                <td style="width: 20%">
                                                    <div class="d-md-flex align-items-center">
                                                        @*<i class="fa fa-phone-square fa-2x mr-1" aria-hidden="true"></i>*@
                                                        <input type="text" class="form-control" @bind="@SubOffice.subCont" placeholder="Contact Number" />
                                                    </div>
                                                </td>
                                                <td style="width: 16%">
                                                    <div class="d-md-flex align-items-center">

                                                        <select type="text" class="form-control" @bind="@SubOffice.SubOficeZone">
                                                            <option>- Select Zone -</option>
                                                            @foreach (var z in Zones)
                                                            {
                                                                <option value="@z.ZoneName">@z.ZoneName</option>
                                                            }
                                                        </select>
                                                    </div>
                                                </td>

                                                <td style="width: 2%">
                                                    <a title="Remove Office" style="cursor:pointer; color:red; display:inline-block; line-height: 1;" @onclick="() => RemoveParent(SubOffice)">
                                                        <i class="fa fa-times-circle fa-2x" aria-hidden="true" style="vertical-align: middle;"></i>
                                                        <span style="vertical-align: middle;"></span>
                                                    </a>
                                                </td>
                                            </tr>

                                            <tr>
                                                <td colspan="6" style="padding: 5px 0 !important;">
                                                    <table class="table">
                                                        <thead style="text-align:center">
                                                            <tr>
                                                                <th style="width: 5%">No.</th>
                                                                <th style="width: 20%">Office Name</th>
                                                                <th style="width: 40%">Address</th>
                                                                <th style="width: 15%">Contact Person</th>
                                                                <th style="width: 15%">Contact Number</th>
                                                                <th style="width: 5%"><a title="Add Row" style="cursor:pointer; color:darkblue" @onclick="() => AddChild(SubOffice)"><i class="fa fa-plus-circle fa-2x" aria-hidden="true"></i></a></th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var zonalOffice in SubOffice.Zoffice)
                                                            {
                                                                <tr>
                                                                    <td><input type="text" class="form-control" @bind="@zonalOffice.Number" /></td>
                                                                    <td><input type="text" class="form-control" @bind="@zonalOffice.zoName" /></td>
                                                                    <td><input type="text" class="form-control" @bind="@zonalOffice.zoAddress" />  </td>
                                                                    <td><input type="text" class="form-control" @bind="@zonalOffice.zoContPerson" />  </td>
                                                                    <td><input type="text" class="form-control" @bind="@zonalOffice.zoCont" />  </td>

                                                                    <td style="text-align:center"><a title="Remove Row" style="cursor:pointer;" @onclick="() => RemoveChild(SubOffice, zonalOffice)"><i class="fa fa-trash fa-2x text-danger" aria-hidden="true"></i></a></td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                <div style="text-align:center;">
                                    <a style="margin-top:-15px" class="btn btn-primary col-md-12 mb-2" @onclick="AddParent">Add Office</a>
                                </div>
                            </div>

                        </MudExpansionPanel>
                    </MudExpansionPanels>
                   

                    <div style="text-align:center;" class="mt-4">
                        <button type="submit" class="btn btn-success col-md-2">Submit</button>
                        <button type="button" class="btn btn-danger col-md-2" @onclick="OnClose">Close</button>
                    </div>
                    <br />
                </EditForm>
                <Dailog Title="@Message" Show="@show" OnCloseDialog="ResetForm">
                    @if (show)
                    {
                        @if (TaskCompleted)
                        {
                            <div style="text-align:center;">
                                @MessageBody
                            </div>
                        }
                        else
                        {
                            <div style="text-align:center">
                                <div class="lds-ellipsis"><div></div><div></div><div></div><div></div></div>
                            </div>
                        }
                    }

                </Dailog>

                <PageDialog Title="Add Zones" Show="AddZone" ClosePageDialog="ClosePopUp">
                    <AddZoneArea />
                </PageDialog>
            }
        </div>
    </div>


</div>

@code {
    [Parameter]
    public int Id { get; set; }
    bool AddZone = false;
    public string Title
    {
        get
        {
            return model?.Id > 0 ? "Modify Company" : "Add Company";
        }
    }

    private bool show = false;
    string Message = string.Empty;
    string MessageBody = "Thank you!";
    bool IsError = false;
    bool IsSuccess = false;
    bool TaskCompleted = false;
    Company model = new();
    List<ZoneArea> Zones = new();

    public void Init()
    {
        Company model = new();
        subOfficeAddress = new List<SubOffice>() { new SubOffice() { Number = subOfficeAddress.Count + 1 } };
    }
    protected override async Task OnInitializedAsync()
    {
        Zones = new List<ZoneArea>(await client.GetAllZoneArea());
        if (Id > 0)
        {
            model = await client.GetCompanyById(Id);
            var Data = await client.GetSubOfficeByCompanyId(Id);
            subOfficeAddress = Data.ToList();
        }
        else
        {
            Init();
        }
    }
    protected async Task OnValidSubmit()
    {
        Message = string.Empty;
        MessageBody = "Thank you!";
        IsError = false;
        IsSuccess = false;
        show = true;
        TaskCompleted = false;
        try
        {
            Message = "Please wait";
            int Id = model.Id;
            model.CompanyCode = model.CompanyCode.ToUpper();
            var response = await client.UpsertCompanyAsync(model);
            if (response.IsSuccess)
            {
                model = response.Result;
                foreach (var o in subOfficeAddress)
                {
                    o.CompanyId = model.Id;
                }
                subOfficeAddress = await client.UpsertSubOfficeAsync(subOfficeAddress);
                Message = Id > 0 ? "Successfully Updated" : "Successfully Added";
                TaskCompleted = true;
            }
            else
            {
                Message = "Error!";
                MessageBody = response.Message;
                TaskCompleted = true;
            }

        }
        catch (Exception ex)
        {
            logger.LogCritical(ex, ex.Message);
            IsError = true;
            Message = "Error!";
            MessageBody = ex.Message;
            TaskCompleted = true;
        }
    }
    private void ResetForm()
    {
        show = false;
        if (Message.Contains("Successfully Added"))
        {
            model = new();
        }
    }
    public void OnClose()
    {
        NavigationManager.NavigateTo("/companies");
    }

    private List<SubOffice> subOfficeAddress { get; set; } = new List<SubOffice>();
    private void AddParent()
    {
        subOfficeAddress.Add(new SubOffice() { Number = subOfficeAddress.Count + 1 });
    }

    private void RemoveParent(SubOffice subOffice)
    {
        subOfficeAddress.Remove(subOffice);
        UpdateQuestionNumbers(subOfficeAddress);

    }

    private void AddChild(SubOffice subOffice)
    {
        var subZonalOfficeAddress = new Zoffice
            {
                Number = subOffice.Zoffice.Count + 1
            };
        subOffice.Zoffice.Add(subZonalOfficeAddress);
        UpdateOrderNumbers(subOffice.Zoffice);
    }

    private void RemoveChild(SubOffice subOffice, Zoffice zonalOffice)
    {
        subOffice.Zoffice.Remove(zonalOffice);
        UpdateOrderNumbers(subOffice.Zoffice);
    }

    private void UpdateOrderNumbers(IEnumerable<Zoffice> Zonalffices)
    {
        int orderNumber = 1;
        foreach (var Zonalffice in Zonalffices)
        {
            Zonalffice.Number = orderNumber++;
        }
    }
    private void UpdateQuestionNumbers(IEnumerable<SubOffice> subOfficeAddress)
    {
        int orderNumber = 1;
        foreach (var office in subOfficeAddress)
        {
            office.Number = orderNumber++;
        }
    }

    private async void ClosePopUp()
    {
        show = false;
        AddZone = false;
        Zones = new List<ZoneArea>(await client.GetAllZoneArea());
        StateHasChanged();
    }
}
