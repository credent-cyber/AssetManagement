@inject IJSRuntime JSRuntime
@if (Show)
{
    <div  class="dialog-container" style="width:100%;  height:100vh; z-index: 9999;overflow: hidden;">
        <div id="fileView" class="dialog" style="overflow: hidden;">
            <div id="fullScreenPopupId" class="card">

                <div class="card-header bg-secondary" style="padding: 8px !important; display: flex; align-items: center;">
                    <h5 style="margin: 0;">@Title</h5>
                    <div class="btn-group-sm ml-auto">
                        <a @onclick="ToggleFullScreen" title="ToggleFullScreen" style="cursor: pointer; margin-right:25px; color: white;">
                            <i id="popupScreen" class="oi oi-fullscreen-enter" style="top: 5px;" aria-hidden="true"></i>
                        </a>
                        <a @onclick="Close" title="Close" style="cursor: pointer; margin-left: auto; color: white;">
                            <i class="oi oi-circle-x" style="top: 5px;" aria-hidden="true"></i>
                        </a>
                    </div>
                </div>

                <div class="card-body" style="align-self: center;">
                    <div class="row">
                        <div class="mt-2">
                            @ChildContent
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>

}

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public bool Show { get; set; }
    [Parameter] public string Title { get; set; }
    [Parameter] public EventCallback<bool> ClosePreview { get; set; }

    private async Task Close()
    {
        await ClosePreview.InvokeAsync(false);
    }

    private async Task ToggleFullScreen()
    {
       await JSRuntime.InvokeVoidAsync("openFullscreen", "fileView");
    }
}
