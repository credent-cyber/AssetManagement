// <auto-generated />
using System;
using AssetManagement.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetManagement.DataContext.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.16");

            modelBuilder.Entity("AssetManagement.Dto.Details", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Details");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Allocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllocationType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssetId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetModel")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Checkbox")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeCompanyCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("IssueTill")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Responce")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReturnUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Allocation");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.AllocationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllocationId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllocationType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AssetAquireDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetBrand")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AssetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssetModel")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetType")
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeCompanyCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EmployeeDateOfJoin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EmployeeDateOfleaving")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeDesignation")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeEmail")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployeeMobileNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("IssueTill")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AllocationLog");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AcquireDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssetType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DiscardDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEngazed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubAssetType")
                        .HasColumnType("TEXT");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("_AssetStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AssetType");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AssetEngazedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BankDetail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ESINumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeEngazedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GSTNNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IFSC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IncorporationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("IncorporationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEngazed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PFNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PanNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RegistrationWith")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StartupNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SwiftCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TANNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UAMNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AadhaarNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CPin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfJoin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfLeaving")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpAccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpBankAccNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpBankIfsc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpBankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeCategory")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeEducation")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeEducationDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EngazeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExternalEmailId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsEngazed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherSkills")
                        .HasColumnType("TEXT");

                    b.Property<string>("PANNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PPin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReportingTo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReturnUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UANNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("checkbox")
                        .HasColumnType("INTEGER");

                    b.Property<string>("fatherName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.EmployeeFilesMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AadhaarFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankPassbookFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CertificateFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PanFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePhotoFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeFilesMapping");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.EmployeeOnboardingDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AadhaarFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AadhaarNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BankPassbookFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CPin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CertificateFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmergencyContactNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpAccountName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpBankAccNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpBankIfsc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmpBankName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeEducationDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeGraduation")
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalEmailId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsReplied")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OtherSkills")
                        .HasColumnType("TEXT");

                    b.Property<string>("PANNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PPin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PState")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PanFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PermanentAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePhotoFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ResponceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ReturnUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SecurityStamp")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SkillIDs")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UANNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("checkbox")
                        .HasColumnType("INTEGER");

                    b.Property<string>("fatherName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmployeeOnboarding");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.EmployeeSkillMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeSkillId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSkillMapping");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.EmployeeSkills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Skill")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSkills");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.SubAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AssetTypeId");

                    b.ToTable("SubAsset");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.SubOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SubOficeZone")
                        .HasColumnType("TEXT");

                    b.Property<string>("subAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("subCont")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("subContPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("subName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SubOffice");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Zoffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubOfficeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("zoAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("zoCont")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("zoContPerson")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("zoName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("SubOfficeId");

                    b.ToTable("Zoffice");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.ZoneArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ZoneArea");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Allocation", b =>
                {
                    b.HasOne("AssetManagement.Dto.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Dto.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssetManagement.Dto.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Asset", b =>
                {
                    b.HasOne("AssetManagement.Dto.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Employee", b =>
                {
                    b.HasOne("AssetManagement.Dto.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.EmployeeFilesMapping", b =>
                {
                    b.HasOne("AssetManagement.Dto.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.SubAsset", b =>
                {
                    b.HasOne("AssetManagement.Dto.Models.AssetType", null)
                        .WithMany("SubAssets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.Zoffice", b =>
                {
                    b.HasOne("AssetManagement.Dto.Models.SubOffice", null)
                        .WithMany("Zoffice")
                        .HasForeignKey("SubOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.AssetType", b =>
                {
                    b.Navigation("SubAssets");
                });

            modelBuilder.Entity("AssetManagement.Dto.Models.SubOffice", b =>
                {
                    b.Navigation("Zoffice");
                });
#pragma warning restore 612, 618
        }
    }
}
